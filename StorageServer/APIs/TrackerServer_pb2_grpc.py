# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import TrackerServer_pb2 as TrackerServer__pb2


class TrackerServerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AskFileOperation = channel.unary_unary(
                '/TrackerServer.TrackerServer/AskFileOperation',
                request_serializer=TrackerServer__pb2.AskFileOperationRequest.SerializeToString,
                response_deserializer=TrackerServer__pb2.AskFileOperationResponse.FromString,
                )
        self.GetFileList = channel.unary_unary(
                '/TrackerServer.TrackerServer/GetFileList',
                request_serializer=TrackerServer__pb2.GetFileListRequest.SerializeToString,
                response_deserializer=TrackerServer__pb2.GetFileListResponse.FromString,
                )
        self.UpdateFileInfo = channel.unary_unary(
                '/TrackerServer.TrackerServer/UpdateFileInfo',
                request_serializer=TrackerServer__pb2.UpdateFileInfoRequest.SerializeToString,
                response_deserializer=TrackerServer__pb2.UpdateFileInfoResponse.FromString,
                )
        self.Replicate = channel.unary_unary(
                '/TrackerServer.TrackerServer/Replicate',
                request_serializer=TrackerServer__pb2.ReplicateRequest.SerializeToString,
                response_deserializer=TrackerServer__pb2.ReplicateResponse.FromString,
                )
        self.AddStorageServer = channel.unary_unary(
                '/TrackerServer.TrackerServer/AddStorageServer',
                request_serializer=TrackerServer__pb2.AddStorageServerRequest.SerializeToString,
                response_deserializer=TrackerServer__pb2.AddStorageServerResponse.FromString,
                )
        self.DeleteFile = channel.unary_unary(
                '/TrackerServer.TrackerServer/DeleteFile',
                request_serializer=TrackerServer__pb2.DeleteFileRequest.SerializeToString,
                response_deserializer=TrackerServer__pb2.DeleteFileResponse.FromString,
                )


class TrackerServerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AskFileOperation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFileList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateFileInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Replicate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddStorageServer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TrackerServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AskFileOperation': grpc.unary_unary_rpc_method_handler(
                    servicer.AskFileOperation,
                    request_deserializer=TrackerServer__pb2.AskFileOperationRequest.FromString,
                    response_serializer=TrackerServer__pb2.AskFileOperationResponse.SerializeToString,
            ),
            'GetFileList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFileList,
                    request_deserializer=TrackerServer__pb2.GetFileListRequest.FromString,
                    response_serializer=TrackerServer__pb2.GetFileListResponse.SerializeToString,
            ),
            'UpdateFileInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateFileInfo,
                    request_deserializer=TrackerServer__pb2.UpdateFileInfoRequest.FromString,
                    response_serializer=TrackerServer__pb2.UpdateFileInfoResponse.SerializeToString,
            ),
            'Replicate': grpc.unary_unary_rpc_method_handler(
                    servicer.Replicate,
                    request_deserializer=TrackerServer__pb2.ReplicateRequest.FromString,
                    response_serializer=TrackerServer__pb2.ReplicateResponse.SerializeToString,
            ),
            'AddStorageServer': grpc.unary_unary_rpc_method_handler(
                    servicer.AddStorageServer,
                    request_deserializer=TrackerServer__pb2.AddStorageServerRequest.FromString,
                    response_serializer=TrackerServer__pb2.AddStorageServerResponse.SerializeToString,
            ),
            'DeleteFile': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteFile,
                    request_deserializer=TrackerServer__pb2.DeleteFileRequest.FromString,
                    response_serializer=TrackerServer__pb2.DeleteFileResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'TrackerServer.TrackerServer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TrackerServer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AskFileOperation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TrackerServer.TrackerServer/AskFileOperation',
            TrackerServer__pb2.AskFileOperationRequest.SerializeToString,
            TrackerServer__pb2.AskFileOperationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFileList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TrackerServer.TrackerServer/GetFileList',
            TrackerServer__pb2.GetFileListRequest.SerializeToString,
            TrackerServer__pb2.GetFileListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateFileInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TrackerServer.TrackerServer/UpdateFileInfo',
            TrackerServer__pb2.UpdateFileInfoRequest.SerializeToString,
            TrackerServer__pb2.UpdateFileInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Replicate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TrackerServer.TrackerServer/Replicate',
            TrackerServer__pb2.ReplicateRequest.SerializeToString,
            TrackerServer__pb2.ReplicateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddStorageServer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TrackerServer.TrackerServer/AddStorageServer',
            TrackerServer__pb2.AddStorageServerRequest.SerializeToString,
            TrackerServer__pb2.AddStorageServerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TrackerServer.TrackerServer/DeleteFile',
            TrackerServer__pb2.DeleteFileRequest.SerializeToString,
            TrackerServer__pb2.DeleteFileResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
